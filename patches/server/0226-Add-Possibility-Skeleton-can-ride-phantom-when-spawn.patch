From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: DoctaEnkoda <bierquejason@gmail.com>
Date: Wed, 30 Jun 2021 09:54:31 +0200
Subject: [PATCH] Add Possibility Skeleton can ride phantom when spawning


diff --git a/src/main/java/net/minecraft/world/entity/monster/EntityPhantom.java b/src/main/java/net/minecraft/world/entity/monster/EntityPhantom.java
index be5837c4f515cd2587bea22b14a3833a81e7b560..840c1c2a8001521c0f560414a8f6eeb006c2f339 100644
--- a/src/main/java/net/minecraft/world/entity/monster/EntityPhantom.java
+++ b/src/main/java/net/minecraft/world/entity/monster/EntityPhantom.java
@@ -4,6 +4,7 @@ import java.util.Comparator;
 import java.util.EnumSet;
 import java.util.Iterator;
 import java.util.List;
+import java.util.concurrent.ThreadLocalRandom;
 import javax.annotation.Nullable;
 import net.minecraft.core.BaseBlockPosition;
 import net.minecraft.core.BlockPosition;
@@ -246,9 +247,20 @@ public class EntityPhantom extends EntityFlying implements IMonster {
 
     @Override
     public GroupDataEntity prepare(WorldAccess worldaccess, DifficultyDamageScaler difficultydamagescaler, EnumMobSpawn enummobspawn, @Nullable GroupDataEntity groupdataentity, @Nullable NBTTagCompound nbttagcompound) {
+        // Purpur-SinonMC - Start
+        GroupDataEntity groupDataEntity = super.prepare(worldaccess, difficultydamagescaler, enummobspawn, groupdataentity, nbttagcompound);
+        if (ThreadLocalRandom.current().nextDouble(0, 100) <= this.world.purpurConfig.phantomHasSkeletonRide) {
+            EntitySkeleton entityskeleton = EntityTypes.SKELETON.a(this.world);
+            if (entityskeleton != null) {
+                entityskeleton.setPositionRotation(this.locX(), this.locY(), this.locZ(), this.yaw, 0.0F);
+                entityskeleton.prepare(worldaccess, difficultydamagescaler, enummobspawn, null, null);
+                entityskeleton.startRiding(this);
+            }
+        }
+        // Purpur-SinonMC - End
         this.d = this.getChunkCoordinates().up(5);
         this.setSize(0);
-        return super.prepare(worldaccess, difficultydamagescaler, enummobspawn, groupdataentity, nbttagcompound);
+        return groupDataEntity; // Purpur-SinonMC
     }
 
     @Override
diff --git a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
index 5e0c8c2bb05ebb9bc5a9be7e6f501540f33e7839..a52f1e6a6e2bb720d432c9dead09c58bd6191299 100644
--- a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
@@ -1426,6 +1426,7 @@ public class PurpurWorldConfig {
     public boolean phantomAllowGriefing = false;
     public boolean phantomFlamesOnSwoop = false;
     public double phantomMaxHealth = 20.0D;
+    public double phantomHasSkeletonRide = 0;
     private void phantomSettings() {
         phantomRidable = getBoolean("mobs.phantom.ridable", phantomRidable);
         phantomRidableInWater = getBoolean("mobs.phantom.ridable-in-water", phantomRidableInWater);
@@ -1458,6 +1459,7 @@ public class PurpurWorldConfig {
             set("mobs.phantom.attributes.max_health", oldValue);
         }
         phantomMaxHealth = getDouble("mobs.phantom.attributes.max_health", phantomMaxHealth);
+        phantomHasSkeletonRide = getDouble("mobs.phantom.spawn.with-skeleton", phantomHasSkeletonRide);
     }
 
     public boolean pigRidable = false;
